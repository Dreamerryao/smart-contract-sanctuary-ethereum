contract A {

    function a() external view returns (uint) {
        return 1;
    }
    function kill() external {
        selfdestruct(payable(0x0));
    }
}

contract B {

    function b() external view returns (uint) {
        return 2;
    }
    function kill() external {
        selfdestruct(payable(0x0));
    }
}

interface ICodeHolder {

    function setBytecode(bytes memory code) external ; 
    function bytecode() view external returns (bytes memory) ;
}

contract Dumper {
    constructor() {
        bytes memory code = ICodeHolder(msg.sender).bytecode();
        assembly {
            return (add(code,0x20),mload(code))
        }
    }
}

contract Main is ICodeHolder {

    bytes32 salt = hex"11";
    bytes public _bytecode;
    
    function setBytecode(bytes memory code) override external {
        _bytecode = code;
    } 
    function bytecode() view external override returns (bytes memory)  {
        return _bytecode;
    }
    event output(address a);
//     {
// 	"functionDebugData": {},
// 	"generatedSources": [],
// 	"linkReferences": {},
// 	"object": "608060405234801561001057600080fd5b5060e28061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630dbe671f14603757806341c0e1b5146051575b600080fd5b603d6059565b604051604891906089565b60405180910390f35b60576062565b005b60006001905090565b600073ffffffffffffffffffffffffffffffffffffffff16ff5b60838160a2565b82525050565b6000602082019050609c6000830184607c565b92915050565b600081905091905056fea264697066735822122085d8e0919bc333b8f2ae91c402993f082078714a846b6b56a936c25200f8117364736f6c63430008070033",
// 	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE2 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBE671F EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x62 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x83 DUP2 PUSH1 0xA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9C PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD8 0xE0 SWAP2 SWAP12 0xC3 CALLER 0xB8 CALLCODE 0xAE SWAP2 0xC4 MUL SWAP10 EXTCODEHASH ADDMOD KECCAK256 PUSH25 0x714A846B6B56A936C25200F8117364736F6C63430008070033 ",
// 	"sourceMap": "0:168:0:-:0;;;;;;;;;;;;;;;;;;;"
// }


// {
// 	"functionDebugData": {},
// 	"generatedSources": [],
// 	"linkReferences": {},
// 	"object": "608060405234801561001057600080fd5b5060e28061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806341c0e1b51460375780634df7e3d014603f575b600080fd5b603d6059565b005b60456073565b604051605091906089565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16ff5b60006002905090565b60838160a2565b82525050565b6000602082019050609c6000830184607c565b92915050565b600081905091905056fea2646970667358221220e8615f13b904ea1284b5ac76618a77c12477ad8b1eb55bbcafa2a6d01f2d5d7764736f6c63430008070033",
// 	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE2 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x4DF7E3D0 EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 PUSH1 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x83 DUP2 PUSH1 0xA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9C PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 PUSH2 0x5F13 0xB9 DIV 0xEA SLT DUP5 0xB5 0xAC PUSH23 0x618A77C12477AD8B1EB55BBCAFA2A6D01F2D5D7764736F PUSH13 0x63430008070033000000000000 ",
// 	"sourceMap": "172:168:0:-:0;;;;;;;;;;;;;;;;;;;"
// }

    function deploy(bytes calldata code) external {
        _bytecode = code;
        Dumper d = new Dumper{salt:salt}();
        emit output(address(d));
    }
}