/**
 *Submitted for verification at Etherscan.io on 2022-02-07
*/

//██████████████████████████████████████████████████████████████
//█─▄─▄─█─█─█▄─▄▄─███─▄▄▄▄█─▄─▄─██▀▄─██▄─▄▄▀█─▄─▄─█▄─██─▄█▄─▄▄─█
//███─███─▄─██─▄█▀███▄▄▄▄─███─████─▀─███─▄─▄███─████─██─███─▄▄▄█
//▀▀▄▄▄▀▀▄▀▄▀▄▄▄▄▄▀▀▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▀▄▄▀▄▄▀▄▄▀▀▄▄▄▀▀▀▄▄▄▄▀▀▄▄▄▀▀▀
//
//
//
//
//
//  .       .       .     👾   .   .      .   🌑
//   .  .    .   .    .    .      .   .👾   .         
//      .👾 .    . 🛸 .     .  .🌙    .    .     
//
//.      .      .          🚀  .  .   .   .  .  
//                 .  .   .
//  .       .           .     .  .    .    .   .     
// .☁️☁️☁️  ☁️☁️☁️  .☁️ ☁️☁️☁️☁️☁️☁️ ☁️☁️☁️ 
//                   .  
//                 .
//                .
//               .
//              .  
//             .
//            .
//          💥
//          🌏
// 
// ────────▄█▀▄
// ──────▄██▀▀▀▀▄
// ────▄███▀TMI▀▀▀▄
// ──▄████▀▀▀▀▀▀▀▀▀▀▄
// ▄█████▀▀▀▀𓀿▀▀▀▀▀▀▀▀▄𓀬𓃗𓃱𓀡𓅷𓆏𓃰𓃠𓃟𓃒𓅰𓅷𓆏𓃰𓃠𓅿𓃱𓃗𓅓𓆙𓀿𓂉𓃒𓃒𓃗𓃘𓃝𓃟𓃠𓃡𓃩𓃬𓃯𓃰𓃱𓃲𓃵𓃷𓃹𓄿𓅜𓅦𓅪𓅭𓅰𓆈𓆉𓆌𓆏𓆗𓆟𓆡𓆣𓆦𓆧𓆉
//
//
//👋 Hi, I’m The Founder ပို
//🗺️ I'm a traveling man from MI, where come you fro?
//👀 I’m interested in web3, ui design and ux design
//🌱 I’m currently learning all things web3
//💞️ I’m looking to collaborate on The Startup
//
//
// MISSION BRIEF: 🏣 -> 🦄 
// 📈 နဲ့CALE THE နဲ့TARTUP 
//
//          🦲🦱🦲🦲🦳🦲🦰
// Loading… ████         ] 24%
//
// "The only way to reach the moon  
// is by Traveling towards the Light" 
//
//                      - The Founder ပို
//  
// 📫 How to reach me:
//[🐦 Twitter](https://twitter.com/imthefounder)
//[📺 YouTube]( https://www.youtube.com/user/kstephontv?sub_confirmation=1)
//[🖼️ Instagram](https://instagram.com/imthefounder)
//
// FMC Induction 
// Phase 1 of 4 |PS, S, A, B|
// ☑️ PS , 🔲 S, 🔲 A, 🔲 B
//
// Web3 Vibes Only 
// By Us 🤹🏾‍♂️ For Us
//
// 
// Created by: Humans in a Garage 
//
//
// 
//Title: 🧬⃤ +🧠⃤ +🧪⃤  Encoded,
//Evolution Becomes Revolution
//
//───────────────▄▄───▐█
//───▄▄▄───▄██▄──█▀───█─▄
//─▄██▀█▌─██▄▄──▐█▀▄─▐█▀
//▐█▀▀▌───▄▀▌─▌─█─▌──▌─▌
//▌▀▄─▐──▀▄─▐▄─▐▄▐▄─▐▄─▐▄
//
//📅 Fri 2/2/2022 2:22 AM
//                                                                                                                                                                                                                                                             
//May your remaining chapters in this simulation we call life be fruitful, 
//may your journey be fulfilling and may your cup runneth over with love
//and that be your usual. I wish you an abundance of prosperity, peace, 
//understanding, clarity and for your mind to be free. I wish you insight 
//so that you may see, see for yourself that right now you are exactly
//where you are meant to be. Beautiful fruit manifested by the tree,
//we all have a purpose, to give that in which was given to thee, live 
//your life but take time to enjoy the breeze, plant your seeds and give
//life to your profound, dreams because fruit that never falls often times 
//becomes feast. I wish this for you, I wish this for me. May all of your 
//endeavors be met with favor, may your tears be those of joy and may you 
//always stay sucka free. - The Founder ပို                                                                                                                                                                                                                                                        
//                                     
// 
// 
//-------------------------------------------------------->                                                                                                                                                                                                                                                                
//(This may look crazy on etherscan but clarity, 
//and water, is often times purified with a 'remix'. It is 
//then 'solidified' in cold storage. [For 4k view, ctrl+a, 
//ctrl+c then ctrl+v in Github. For HD, view in VSC. For SD, 
//view on etherscan, toggle_fullscreen, squint then scroll)

//   
//
//
//                                                                                                !|@@W⬛🔲SQUARE🔳⬜E`|#@#@@|`                                                                                                                                
//                                                                                              #@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@#ET~                                                                                                                            
//                                                                                           ~#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##0EF*`                                                                                                                    
//                                                                               `T#@@@#EFF##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@!                                                                                                                  
//                                                                         ;T*[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##0*`                                                                                                              
//                                                                       _0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##E#!+'                                                                                                        
//                                                               `_/E##@@@@@@@@@@@@@@@@@@@@@I'm The Founder ပို. This is The [email protected]@@@@@@@@@@@@@@@@@@@@@#E!_                                                                                                    
//                                                            [email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#0_-                                                                                                
//                                                           [email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#1#@@@@@@@@E/                                                                                              
//                                                        . ;#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#[email protected]@@@@@@@@*                                                                                            
//                                                       `;!#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#'[email protected]@@@@@@@#E.                                                                                        
//                                                        [email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E~ _|T#@@@@@#_|`                                                                                      
//                                                    -- .T#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E`      [email protected]@@#T~                                                                                      
//                                                     :`|@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:        ``                                                                                        
//                                                      [email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#1.                                                                                              
//                                                    -,'[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0`                                                                                            
//                                                  `[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@I.                                                                                          
//                                                 ,*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#,                                                                                        
//                                                  #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#,                                                                                      
//                                                +|#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#T!.                                                                                  
//                                                 \#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@##E-                                                                                
//                                              - ;#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+,!#@@@#E.:`                                                                            
//                                             -!#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E- [email protected]@@@@@#1-                                                                          
//                                             ``[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@: [email protected]@@@@@@#T~!`                                                                      
//                                            ,!~~I#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@; [email protected]@@@@@@@@#0-                                                                    
//                                           -,1_#[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0###I  #@@##@@@@@##;.                                                                  
//                                           ,_;TE##@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@###EE###0E0E00FE#####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###!  E#[email protected]@@@@####0.                                                                
//                                          .,[email protected]@@@@@@@@@@@@@@@@@@@@@@@#######EETE#0|\T1||=*11\!!!_!=\T0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###01~      !T#@##ET1F~                                                                
//                                           .:.,T#@@@@@@@@@@@@@@@@@@@@@@@##0ETFIT\!_!+!;,;:;[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#E|!;'        .#_ `  ,                                                                
//                                           .--_##@@@@@@@@@@@@@@@@@@#@@##EE0E1!_~_;_;;'`.~;,',,;;~;___!!*+|||[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##E\_:,:`.      ,#;_- ;                                                              
//                                           `  1##[email protected]@@@@@@@@@@@@@@@@###E111!~__~__;,`,`-:::':',::~;~~__!/1\11|I#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#I|_/T1`        EF;!!-                                                              
//                                        -- ~`.F*E#@@@@@@@@@@@@@@#@#0EFT|*/!_;;;::'-.,`-`'.'':'';;~__!+=1|111|TE#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##0|:'..`` `   ,,_=_                                                              
//                                          `1_|[email protected]##@@@@@@@@@@@#####EF|1!____',:',,.``...`.``'''::~_!!!!/1||11|TFE#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####|!_,'- .     -_,-                                                            
//                                          ;___*##@@@@@@@@@@@@##0F||1=_~;;~,,,,.`.-`.``-.-`..`':;;_!!!*11||1|TIII##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@!`:,,`.                                                                      
//                                           `.`~~E#@@@@@@@@@@@##ET=*!__;~;~~;':'---``..-```--',.:~';_!!\11||11|TTF0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#[email protected]@_                                                                          
//                                         -:-!+*0#@@@@@@@@@@##E1!!!!_~__~;~::',,-`.--`.`--...--.:::;_!/+=1|||TT|F00##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#_.`;#@_                                                                          
//                                           `!E_!#@@@@@@@@###F1!!__!____~~~;:::'-`-.       .`.``-.:;;_!*1|1111||TFE0##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@T_~,!#@F.                                                                        
//                                            *IE|#@@@@@@@#0T|1/!__________~;,:,,-.`       -- -`..,:,~~;!*!!!\\\1|TEE00#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@F=1\_E#@@\`                                                                      
//                                            -,:[email protected]@@@@#ET|!!!!_!!!!!_____;':'''`..`` `  -``.-..`.``.''~;~_!!=11|TTTFE##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#!.;[email protected]##@@E-                                                                    
//                                            ,-~|[email protected]@##0T*1!_!!!!!!!!!____~;',',;:. -   `.   .-.`..-...,';~_!!=+1|TTTTE0###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[email protected]@@@@@@@!                                                                  
//                                              [email protected]#EF1!_!!!!!!!!*!!!!__~;~,:,:,- .       `--.`.-.`---:,'~__!*=11=+1|TEEE#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|#@@@@@@@#\                                                                  
//                                               _I#|!!!__!!!!*==+!!!___;~:,,:`-`--         .  `:'-`--.,',;_!!11+11111|IFFE#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;[email protected]@@@@@@#1                                                                
//                                              ~`0#!_____!\=+=*/!!!!__~;~:''.`.  --   .` `-`---...-..`.,;~_!!+=\11|||||TTT##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#-;@@@@@@@@|                                                                
//                                               !1E;~;__!!=*\1/+!!!__~';;:':``-`--      .-.-..... ..``-:;~__!!/1|11111|TTT0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@T  [email protected]@@@@@@:                                                              
//                                               .;!~;;_!!+//+11*!!!__~;;~,:,-`.````-..` .-.-.`.``.``.-:::;__!\+1|111/1||TTE0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0 [email protected]@@@@@#                                                              
//                                                E~~__!!*1*11|+*_!___;;~~;,'':'`-`.--.`-...- `.. `.-.``:'~_!+\111!\*/*11||FI0#@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. ~#@@@@@|                                                              
//                                                T';_!!/\=+11|=!!___~;~;~;;~'''.`.-`-.`.`.--.``-`-`.--',';~_!!!!\!_!!!\111|I0#@@@@@@@@@@@@@@@@@@@@@@@@@@@|[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@:  `[email protected]@@@#1-                                                            
//                                                |;;!!/+111111\!!__~~~~,'~;~~~''-.--`-.----.`--..``-`.`-';~;__~~;~~~;__!!!/1|[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@=1#@@@@@@@@@@@@@@@@@@@@@@@@@@@~    ,#@@E_;                                                            
//                                               `E;_!!!*1|1|11/!___~~~;:':~;~',`-.``-`...--`..--..-.-```,':;~;;,,:,:,;;~;_!+1I#@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_    [email protected]#!+1                                                            
//                                                I_!*!\11||11\1!__!_;~,:,:~':':''```--..---``--`.-.`-.-..'`.',,,,,'~!!_,',~_!|0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#[email protected]#,    |##||_                                                          
//                                               -E__!/11|T|111*/!!___;~;:':'~::,::,`--`-````-`..`..`.``..``..:'::~__*1+\:,:;_*T##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[email protected]@     |#T/!,                                                          
//                                               -0!_!+11||||111=!!!!__~~;~,;~:','`-.`-.-.-`-`.-.`   `  ` ...`,__!\|IE1_~,:,,~_*F#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E#@@#[email protected]#    .0|E|!                                                          
//                                                E!_!/1||TTT||1\!!!!!__;~;:'~,,::-...-````-.-.`.        `-`:~*1|IFFFE|_:-`'::;_!F#@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@#[email protected]@01;:-T*    [email protected]#0-                                                          
//                                                0+!!!1TTITTT|1\+\!!!!__;;;~~;~::-..-..-.`...``       `--'-;10######|___~:,'`,,~*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|:,FE1::;!E`   `##1.                                                          
//                                                #|!_!1|TIFFF|T|*1*+!____;~~;~,,''-'''--.`   --     ..-,~_1|00##EI_,--.`:,~,~:,;_|#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;;!##|!;1#,    -,                                                            
//                                                TT\_/|TIEEETTT|\1\1+!_;;;_;:;~,':`.```-.`. .      `..`'_1TE#TFT~.`     `-',;[email protected]@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@1;[email protected]@@TT!#T                                                                  
//                                                !F+_\|TIEEEEFI||**=!_~_;;;',-..`-``.`--`-.``   `..-`.,;!||0E\!;'-`      .`...';_+|#@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0#@@#,``#@##E#@:                                                                
//                                                '0/_\1TFEEEEEI|11/!!_~;~,,,:.`-````--`.`-`--`  ---.:'~_+T|1!!_;:``-.`-.--`--`.';[email protected]@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#_  [email protected]@@@@@@,                                                                
//                                                 0*!/1|IEEE0EIT1+!__~,;,':-.`````.`-`-..`.`.-.--,.':!!!||/!*11/;~~___;;,:'',:::;_/E#@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@|  [email protected]@@@@@@@,                                                              
//                                                 T+!!1|TF0EEET|//!__;:,'`.``.`..``.---.-`....--`--,'1!=T1/TE##000####0FT\/____!!\T0#@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#' /#@@@@@@@#                                                              
//                                                 -E/+1|TIEEFI|1+!__;~,```.`..`  `...-..`-.-``.`.``,;!_!|0##@@@@@@@@@####@@@@####000#@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#` [email protected]@@@@@@@1                                                              
//                                                 .#/*11|IEEE|1\__~,':'``--``.`  -`-``.`.`.-`.-`-`''~=1T0#@@@@@@@#\_~,';!|E##@@@#####@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[email protected]@@@@@@@@#-                                                            
//                                                  1|\*1|T|TF|\!_;,,.`..-.--.-.-``-..`--.''-````-';_/TE##@@@@@@#|+!;',:;_=T0#########@@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@#                                                            
//                                                  ,01111||||+_~~,,-.-:`-``.`-,-`--'',:,,,,`.-,'';_1TE##@@@@@@#T|1!;~.-.;!1|E0########@@@@@@@@####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=                                                          
//                                                   I=111111/!__;;:,,,:-:,',`,,::',::::,',,':`-,;~!|E##@@@@@@#ETTT11T#@@@@@@@@@@@@###@@@@@@@@@#E00#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!                                                          
//                                                   'F+\1111\*\!!!!!!!!;~~;_~'~'::,,:,::::,:,'''~_+T####@@@@##00##@@@@@@@@@@@@@@@@@###@@@@@@@@@EII0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#[email protected]@@@@@#:                                                        
//                                                    /++/*11|||T00000ETT|+1/!!!_~;:,,:,,,,,':'.,;_10###@@@######@##@@@@@@@@@[email protected]@@###EE0#@@@@@@@01=*F#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#`[email protected]@@@@@@T                                                      
//                                                     !_!*\1T0##@@@@@@@@##0EEF|+!_;;~~~~~'::::`,;_10#EF#@#####@@1`-#@@@@@@@TTE##@#F/~~_T#@@@@@@#E111T#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,[email protected]@@@@@@=                                                      
//                                                     `!=*1E#@@@@@@@@@@@@@@@####I|\!!__~'',:`.`:;!T0T*|##0E0#@@0'.-`[email protected]@@T+_!T#@#E!~:.':[email protected]@@@@@@#1+/|F#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!`@@@@@@@@;                                                    
//                                                      '!!1#@@@@@@@@@@@@@@@@@@@@###0T+!_;',`--`.~+TT*_!0E!TF#@#I;:'''~_,`,;TI###01;`[email protected]@@@@@#1!/1T#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[email protected]@@@@@@#_                                                    
//                                                       !_1#@@@@@@@@@@@@@@@@@@@@@@@@##F=!~'..-`-'_+=_~_T/',|#T*T|=!!!\|1|1TE###1!;'.-.``'_#@@@@@@01\!*E#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=-#@@@@@@@E                                                    
//                                                       ~~1#@@####@@@@@@@@@@@@@@@@@@@@@0=;:`` `-:_!!;:'!_-`_;'1T0EFFTTFIEEEE1!,-`-``--`.-,[email protected]@@@@@@[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_:#@@@@@@@I                                                  
//                                                        ~+#@#0E0##@@@@@@@@@@@@@@@@@@@@@F!~-`  `,;;~~:,';-`~!_*1E######EF/~:.-.`.-.--.``-`,#@@@@@@#I|11E#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0-E#@@@@@@@_                                                  
//                                                        .F##0FE##@@@@@@@@#[email protected]@@@@@@@@@#/;'.  .`,,~~~:,~~,;`,,',.';~'',.``-.`  - .``-`.-`.|@@@@@@@0111FE#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_ -|@@@@@@#!                                                
//                                                         E##0###@@@###00|[email protected]@@@@@@@@@@@@@=_:`   ..::,;;~,;~;~.`-.-..`---``      `   -..`. `~#@@@@@@0|FTTF0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#.  [email protected]@@@@@F'                                                
//                                                         T#####@@@@##E#@@@@@#@@@@@#@@#@@=_'-   .`.':,:':,;,,':'. .--`.-`          .-   .`[email protected]@@@@@@ET1|E0##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E   [email protected]@@@@=_~                                              
//                                                         1F####@@@@##@@@@@@@@@@@@/_0##0E\~:-     --`.:,,:,::`.`-```                    ``-'[email protected]@@@@@#E||I0###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,    [email protected]@@@E:.-                                            
//                                                        [email protected]|##@@@@#@@@@E#@@@@@@@E101!E0E_;`..     `--.`-:,:,..`...-``-                 `-.':!#@@@@@@E0EF00##@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@#~    `#@@#;;*'                                            
//                                                        /@@_I#@@@@@@@#0/_!#@@@@|,;10EIEE_~--`     `.-..-.`-,.```                     ...``:,_|@@@@@@@T|TEE0##@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@[email protected]@@@@@-      -#0+I1+                                          
//                                                        [email protected]@E|#@@@@@@@/+1;-,:_!/TF0##EEET_;,`-     .--..```-..--`-                    ``-.`:'[email protected]@@@@@#EITE0E##@@@@@@@@@@@@@@@@@E0##@@@@@@@@@@@#[email protected]@@@@#.       --#0T,                                          
//                                                       [email protected]@@#=E#@@@@@@@#0F!*TTE#####ETTT|_;.`.     -..--.`.-`.'.`.                   ``---,,'[email protected]@@@@@@EETIEE0##@@@@@@@@@@@@@@####@#[email protected]@@@@@@@@@@[email protected]@@@@:                                                      
//                                                      ;@@@@1=F#@@@@@@#@######0###0T111T1_;,,-.     -``-```.-`.`-.                   -....`:,;[email protected]@@@@@#IFT0E0###@@@@@@@@@@@@@#II#;1|@@@@@@@@@@@@!#@@@@I                                                      
//                                                      [email protected]@@@_.T0#@@@@@#@@########|!\==*|+_;,:`.     .`..':--,`..-...                 .`.`.-';~;_T#@@@@@@EIFFII0##@@@@@@@@@@@@@_;E0!_,[email protected]@@@@@@@@@@##@@@@@,                                                      
//                                                      '@@@@T !|###@##########0T=!!!!!!1!!;,'..     -`.-.,'',,''.-.`-.              `-.-`.,;;;[email protected]@@@@@0FETTE00##@@@@@@@@@@@#'_E+:_!_#@@@@#@@@@@@[email protected]@@@@@-                                                    
//                                                       #@@@0 :TIE##IE####0E|\++!!_!___=\!_'::.     `---,',':,;''~:'-``..           ..`.-,,,~~__!\#@@@@@#0FTFE00###@@@@@@@@@@#[email protected]#1!1\@@@@@1#@@@@@@@@@@@@@!                                                    
//                                                     .#@@@@0  |*|TF1|EET1*!___!!!__~~_!\*!;,..      `-``''';~~~;~_~'':-`..        ```.`,:''';~__|#@@@@@@#ETTTTE####@@@@@@@@@@@#1'[email protected]@@@@E|@@@@@@@@@@@@@@T                                                  
//                                                     [email protected]@@@@_  ;*+\/+11=!__~___!!__~~;_!/!_',.-       --`,,'~;;~~!_;;;::-.--       ````-'-,:';;[email protected]@@@@@#0EE||TE##@@@@@@@@@@@@@#|FT#@@@@@@@,|@@@@@@@@@@@@@#                                                  
//                                                     [email protected]@@@@;   /_!!__~________!!_;:,'_!11~:`.-.       -.-:,:',:;~__;;;',.-``-..`-.`.....--:,,~__10#@@@@@@#EFFT|I###@@@@@@@@@@@@@@@@@@@@@@@@[email protected]@@@@@@@@@@@@0                                                  
//                                                      ,@@@@'   ~___~~;~~~~______;,,':~!|T~'.-.-       .-`-''':',';!;;'~:::...-.`--.``-`-.`',:;_!1|#@@@@@@#EEF|TF####@@@@@@@@@@@@@@@@@@@@@@@; [email protected]@@@@@@@@@@@                                                    
//                                                      [email protected]@@@`    __~~;;~;~~~___~~:,,''~_=E~'-..-       -`-``,``..';~!;,',,-...`-`--``.`--.'::;[email protected]@@@@@@#00ETT####@@@@@@@@@@@@@@@@@@@@@@@~  [email protected]@@@@@@@@@#                                                    
//                                                      [email protected]@@#     :~;~~;;;;~~;;;~~',.';,;_|~::``.`      .--``````-':_/+:.-`--..`--..``.```','''~;_!\[email protected]@@@@@@###0TF0#@@@@@@@@@@@@@@@@@@@@@@@@@   [email protected]@@@@@@@@@#`                                                  
//                                                      [email protected]@@@-    `!;_;~;~;~~~;,''':.,':'~!_':..`-      `..':'',:;~!1IE:,- `.``--.``--.---`',';;~_!*[email protected]@@@@@@#000IF0#@@@@@@@@@@@@@@@@@@@@@@@@@    [email protected]@@@@@@@@@                                                    
//                                                      [email protected]@@@_     ;____;~;~_;;''::::'::'~;_:'--`-     -`,:~~_!/E0#####_``    -    --.---:,''';~_!!\1#@@@@@@#0EIEFE###@@@@@@@@@@@@@@@@@@@@@@@,   `@@@@@@@@@@'                                                  
//                                                     ;@@@@@#     `*!!!__;;;~;':':::.---:;__~::.`-.``.',;_=T#@@@@@@@@#'`       -`---`.,-`',:,';_!!+|#@@@@@@@EIIFTE###@@@@@@@@@@@@@@@@@@@@@@@!    [email protected]@@@@@@@@~                                                  
//                                                     [email protected]@@@@#      \!!+!__;~~~'':''','.`';_+=!_',,:.`,;~_/[email protected]@@@@@@@@#_-`       -.-`--``-,''::;;!1111E#@@@@@@@#ETF###@@@@@@@@@@@@@@@@@@@@@@@@@!   -#@@@@@@@#'                                                  
//                                                     `@@@@@@;     -*!*\!_~~~;;:':`.``--.;=I##E1_~',,~_!+F#@@@@@@@0_-`.`...  . ..`-````'',,',;_11111|[email protected]@@@@@@#EEE###@@@@@@@@@@@@@@@@@@@@@@@@@@.   [email protected]@@@@@@T                                                    
//                                                      #@@@@@I      !/!!!____~:',-.```---,E######I1*=\1TE#@@##E1;:'----```--.-..--`:`-:',,~~;;;_//*1|T#@@@@@@@E0###@@@@@@@@@@@@@@@@@@@@@@@@@@@|   ./@@@@@@#`                                                  
//                                                     [email protected]@@@@|      !!\*!____;~~','.`---``,[email protected]@@@@@########@@#!,'-``...`..-`'-.:::;;~';,'::~~~,;__*!1|[email protected]@@@@@@#####@@@@@@@@@@@@@@@@@@@@@@@@@@@#.    #@@@@@@I                                                  
//                                                       @@@@@_     ;@E=+\!!___;~:':..-`.'',!#@@@@@@@@@@@@##F*,':,,~``,`:-:,~\~;+!!+\!~_~~:;;;~;_!!11||I#@@@@@@#####@@@@@@@@@@@@@@@@@@@@@@@@@@@@|   [email protected]@@@@@@@1                                                  
//                                                       #@@@@0     #@@11+*!!!__~;,:'-``-'''=#@@@@@@@@@@@@@0*_~_;',~;',;!=\1|0E\TFT#@0|__~~,'~;~_!/[email protected]@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;  ;@@@@@@@@@1                                                
//                                                       [email protected]@@@@-   .#@@@11*\\=!!!_~':,.``'';_E#@@@@@@@@@@@E1\|T=1_./!~_/|0ET0#@0E0E####11=_;;;~__!+1TEEE#@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;,[email protected]@@@@@@@@@_                                                
//                                                       [email protected]@@@@.   ;@@@@#/1\++/!!_;~'~',:,'~;/F##@@@@@@@@#T|FF###|!*1_1=||F|11!!T!TEIIEE||!;~;;_*|FTE0EE#@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@T'@@@@@@@@@@@`                                              
//                                                       :@@@@@`   [email protected]@@@@_\=/*=!/!_~~~;'';;;____1F0#@@@@##E1\F#E#!.'',,.,;:'-`';_+1|I|TEE|!___~_/F000####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@!                                              
//                                                       -#@@@@;   @@@@@_ |1*=/*11!__~~;~;;;___!*/E#@#@@#0|__:_;..-...`:'':,:~!|######0IF1!!!__!/E########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=                                              
//                                                        [email protected]@@@_  #@@@@|   E*=11111*!!_;;~~~!1=*|##@@@@#T;-.'''.```,;_!|EE0###@@@@@###0T|!!__!!*T0########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                              
//                                                        [email protected]@@@I [email protected]@@@@    -T|11TT/=!!*11GGGTI0E#@@@@#T_'.-:,::'';!=FE#@@@@@@@@@F~E##0FT1\!/!\11E###@@####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_                                              
//                                                         #@@@@`@@@@@*     ~1|TIT|1\\//++|I0###@@@@|;*+*!!=+*+T00##@@@@@@@@@#|-~|#0IT||1!!*11|F0#########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@'@@@@@@E                                              
//                                                         [email protected]@@@#@@@@@~     !E||ITT||11/1I##@@#@###+/FE0E#####@@@@@@@@@@#E~_T:;!|00|!\1=!=1111|TE##########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@./@@@@@@@@# #@@@@@#                                              
//                                                         [email protected]@@@@@@@@=      [email protected]|[email protected]@#@@#T11E####@@@@@@@@@@@@@E~`;_'~;!1E##|1|11!!!+1|||||0########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@T~#@@@@@@@@.`@@@@@I                                              
//                                                         '@@@@@@@@0       [email protected]@00#0IT|11F0##@##EIE#@@@@@@@@@@@@@@#=~`-.;!!__1I0##E=*!!1!!!!!=\1|FE#0####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[email protected]@@@1                                              
//                                                          #@@@@@@#       `@@@@###EIIT1|##@@###@@@@@@@@@@@#E*!_~- -.'~_=\!|I###I=*+!!!_!!!\++1|TE00####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@- [email protected]@@@#                                              
//                                                          [email protected]@@@@@-        #@@@@####EE||E0#@@@@@@@@@@@#|!~~':``',,'_\1+1E0###0F1!!!_=+11\!!\=1=1TIE###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#: #@@@@E                                              
//                                                          #@@@@@@_        [email protected]@@@@@@##0E1T0##@@@@@###0ETIT!_~~~~;!_!+1\F#####0F\!!!!!*!\11|=+!!*1|F0##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@F                                              
//                                                         [email protected]@@@@@@#        [email protected]@@@@@@@##EIII0###@@@@#00EEEEEI|11/=\|1|F#@@@@@#I!!_______!!!_____/1|0##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`                                              
//                                                        [email protected]@@@@@@@@.     _#@@@@@@@@@@##0EEIE00#####@@@##E000IFFE0#@@@@@@@@#E1!_~_~;~~~~,:;~~__!1T#@@@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@T                                              
//                                                       [email protected]@@@@@@@@@T  ;#@@@@@@@@@@@@@@@##0E000#00###@@@@@@####@@@@@@@@@@@#F1\_____~;;~,,',~~~__!|#@@@@@@@@@@@@@@@@@@@@@@@@@F|[email protected]@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@1                                            
//                                                     '[email protected]@@@@#[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@########0##@@@@@@@@@@@@@@@@@@@@#F1___~~;;',''.:,:~;~_!|[email protected]@@@@@@@@@@@@@@@#@@@@@@@@@@#\E#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@F~                                        
//                                                    :@@@@@@_  #@@@@@@@@@@@@@@@@@@@@@@@@@@@@######0###@@@@@@@@@@@@@@@@@0T1_,'`.----`.`,'''~;_!TE#@@@@@@@@@@@@@@@@@@@@@@@@@@@;-:[email protected]@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@|-                                      
//                                                   ~#@@@@@_   `@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####00##@@@@@@@@@@@@@#E*!~'`..`-`.-`.:,,,~~~_=E#@@@@@@@@@@@@@@@@@@@#@@@@@@@@|`_:[email protected]@@@@@[email protected]@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@#~                                    
//                                                   \[email protected]@@@_    [email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####000###@@@@@@@#0T1!_~;:.`'':`-:':';~;_!1F#@@@@@@@@@@@@@@@@@##|_#@@@@@@@#|IF|#[email protected]@###@@@@@#|[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@0`                                  
//                                                 :!#@@/     [email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####00000####0I|!!!___~';~__;~''',:;_!!T1#@@@@@@@@@@@@@@@@@@I*[email protected]@@@@@@@#~*##[email protected]@#[email protected]@@@##[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@0'                                
//                                                  `.      '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####0I|T|EIT/____!*1_;~*|EIT!_~'~~_!/=T#@@@@@@@@@@@@@@@@@@@@01`,[email protected]@@@@@@@@#,*0E#@@@[email protected]@@#___#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#!                              
//                                                       .1#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###0I|*1|1!!_;;!!|IEE0###E|__~!!!|TE0#@@@@@@@@@@@@@@@@@@@@@#\-!!#@@@@@@@@@@@@@@@@@@@@@@I'',#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E-                          
//                                                    `|#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##EF|=!!!!!!\|TEE#@@@@#I=T1+/|EI#@@@@@@@@@@@@@@@@@@@@@@@@@|;. -#@@@@@@@@@@@@@@@@@@@@@@@1\[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0+                        
//                                                `;E#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#0|1/!_!=TTE0EE0####FT10##00#@##@@@@@@@@@@@@@@@@@@@@@@@@1`.- [email protected]@@@@@@@@@@@@@@@@@@@@@@@E#[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0;                    
//                                           `_T##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#0IT/!!_!=T|=/T/|##0E##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#~_'`[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@F`                
//                                       _E#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##E|!=!=0TI1IEE#@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0;~``#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0_              
//                                  -~T#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#0ETE0######@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E='[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#E!`          
//                               ,|#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#E,      
//                            'T#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#1    
//                         _0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:  
//                      !0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##/
//                   !#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0E0##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                :[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##!T1E#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                !#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#=F#!_!#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//           [email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@#TEI#E;_#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//         ;#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@@##@#+;||IE##@####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//       -0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@####@E1#@@@@@@#####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// 
//  
//
// 
//           Gm... (¯`v´¯)♥
//           WAGMI .•.¸.•´ 
//           ....¸.•´
//           ...(
//            ☻/
//           /▌
//           /\
// █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█
// █░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█
// █░░║║║╠─║─║─║║║║║╠─░░█
// █░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█
// █▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█ 
//
//
//
//T🤘E 🖇️T👽RT🤘P (FMC)
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.11;

/**
 * @dev String operations.
 */
library Strings {
    bytes16 private constant _HEX_SYMBOLS = "0123456789abcdef";

    /**
     * @dev Converts a `uint256` to its ASCII `string` decimal representation.
     */
    function toString(uint256 value) internal pure returns (string memory) {
        // Inspired by OraclizeAPI's implementation - MIT licence
        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol

        if (value == 0) {
            return "0";
        }
        uint256 temp = value;
        uint256 digits;
        while (temp != 0) {
            digits++;
            temp /= 10;
        }
        bytes memory buffer = new bytes(digits);
        while (value != 0) {
            digits -= 1;
            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));
            value /= 10;
        }
        return string(buffer);
    }

    /**
     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.
     */
    function toHexString(uint256 value) internal pure returns (string memory) {
        if (value == 0) {
            return "0x00";
        }
        uint256 temp = value;
        uint256 length = 0;
        while (temp != 0) {
            length++;
            temp >>= 8;
        }
        return toHexString(value, length);
    }

    /**
     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.
     */
    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {
        bytes memory buffer = new bytes(2 * length + 2);
        buffer[0] = "0";
        buffer[1] = "x";
        for (uint256 i = 2 * length + 1; i > 1; --i) {
            buffer[i] = _HEX_SYMBOLS[value & 0xf];
            value >>= 4;
        }
        require(value == 0, "Strings: hex length insufficient");
        return string(buffer);
    }
}

/**
 * @dev Provides information about the current execution context, including the
 * sender of the transaction and its data. While these are generally available
 * via msg.sender and msg.data, they should not be accessed in such a direct
 * manner, since when dealing with meta-transactions the account sending and
 * paying for execution may not be the actual sender (as far as an application
 * is concerned).
 *
 * This contract is only required for intermediate, library-like contracts.
 */
abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }

    function _msgData() internal view virtual returns (bytes calldata) {
        return msg.data;
    }
}

/**
 * @dev Collection of functions related to the address type
 */
library Address {
    /**
     * @dev Returns true if `account` is a contract.
     *
     * [IMPORTANT]
     * ====
     * It is unsafe to assume that an address for which this function returns
     * false is an externally-owned account (EOA) and not a contract.
     *
     * Among others, `isContract` will return false for the following
     * types of addresses:
     *
     *  - an externally-owned account
     *  - a contract in construction
     *  - an address where a contract will be created
     *  - an address where a contract lived, but was destroyed
     * ====
     */
    function isContract(address account) internal view returns (bool) {
        // This method relies on extcodesize, which returns 0 for contracts in
        // construction, since the code is only stored at the end of the
        // constructor execution.

        uint256 size;
        assembly {
            size := extcodesize(account)
        }
        return size > 0;
    }

    /**
     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to
     * `recipient`, forwarding all available gas and reverting on errors.
     *
     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
     * of certain opcodes, possibly making contracts go over the 2300 gas limit
     * imposed by `transfer`, making them unable to receive funds via
     * `transfer`. {sendValue} removes this limitation.
     *
     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].
     *
     * IMPORTANT: because control is transferred to `recipient`, care must be
     * taken to not create reentrancy vulnerabilities. Consider using
     * {ReentrancyGuard} or the
     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
     */
    function sendValue(address payable recipient, uint256 amount) internal {
        require(address(this).balance >= amount, "Address: insufficient balance");

        (bool success, ) = recipient.call{value: amount}("");
        require(success, "Address: unable to send value, recipient may have reverted");
    }

    /**
     * @dev Performs a Solidity function call using a low level `call`. A
     * plain `call` is an unsafe replacement for a function call: use this
     * function instead.
     *
     * If `target` reverts with a revert reason, it is bubbled up by this
     * function (like regular Solidity function calls).
     *
     * Returns the raw returned data. To convert to the expected return value,
     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].
     *
     * Requirements:
     *
     * - `target` must be a contract.
     * - calling `target` with `data` must not revert.
     *
     * _Available since v3.1._
     */
    function functionCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionCall(target, data, "Address: low-level call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with
     * `errorMessage` as a fallback revert reason when `target` reverts.
     *
     * _Available since v3.1._
     */
    function functionCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        return functionCallWithValue(target, data, 0, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but also transferring `value` wei to `target`.
     *
     * Requirements:
     *
     * - the calling contract must have an ETH balance of at least `value`.
     * - the called Solidity function must be `payable`.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(
        address target,
        bytes memory data,
        uint256 value
    ) internal returns (bytes memory) {
        return functionCallWithValue(target, data, value, "Address: low-level call with value failed");
    }

    /**
     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but
     * with `errorMessage` as a fallback revert reason when `target` reverts.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(
        address target,
        bytes memory data,
        uint256 value,
        string memory errorMessage
    ) internal returns (bytes memory) {
        require(address(this).balance >= value, "Address: insufficient balance for call");
        require(isContract(target), "Address: call to non-contract");

        (bool success, bytes memory returndata) = target.call{value: value}(data);
        return verifyCallResult(success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {
        return functionStaticCall(target, data, "Address: low-level static call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal view returns (bytes memory) {
        require(isContract(target), "Address: static call to non-contract");

        (bool success, bytes memory returndata) = target.staticcall(data);
        return verifyCallResult(success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionDelegateCall(target, data, "Address: low-level delegate call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        require(isContract(target), "Address: delegate call to non-contract");

        (bool success, bytes memory returndata) = target.delegatecall(data);
        return verifyCallResult(success, returndata, errorMessage);
    }

    /**
     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the
     * revert reason using the provided one.
     *
     * _Available since v4.3._
     */
    function verifyCallResult(
        bool success,
        bytes memory returndata,
        string memory errorMessage
    ) internal pure returns (bytes memory) {
        if (success) {
            return returndata;
        } else {
            // Look for revert reason and bubble it up if present
            if (returndata.length > 0) {
                // The easiest way to bubble the revert reason is using memory via assembly

                assembly {
                    let returndata_size := mload(returndata)
                    revert(add(32, returndata), returndata_size)
                }
            } else {
                revert(errorMessage);
            }
        }
    }
}

/**
 * @title ERC721 token receiver interface
 * @dev Interface for any contract that wants to support safeTransfers
 * from ERC721 asset contracts.
 */
interface IERC721Receiver {
    /**
     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}
     * by `operator` from `from`, this function is called.
     *
     * It must return its Solidity selector to confirm the token transfer.
     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.
     *
     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.
     */
    function onERC721Received(
        address operator,
        address from,
        uint256 tokenId,
        bytes calldata data
    ) external returns (bytes4);
}

/**
 * @dev Interface of the ERC165 standard, as defined in the
 * https://eips.ethereum.org/EIPS/eip-165[EIP].
 *
 * Implementers can declare support of contract interfaces, which can then be
 * queried by others ({ERC165Checker}).
 *
 * For an implementation, see {ERC165}.
 */
interface IERC165 {
    /**
     * @dev Returns true if this contract implements the interface defined by
     * `interfaceId`. See the corresponding
     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]
     * to learn more about how these ids are created.
     *
     * This function call must use less than 30 000 gas.
     */
    function supportsInterface(bytes4 interfaceId) external view returns (bool);
}

/**
 * @dev Implementation of the {IERC165} interface.
 *
 * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check
 * for the additional interface id that will be supported. For example:
 *
 * ```solidity
 * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {
 *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);
 * }
 * ```
 *
 * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.
 */
abstract contract ERC165 is IERC165 {
    /**
     * @dev See {IERC165-supportsInterface}.
     */
    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {
        return interfaceId == type(IERC165).interfaceId;
    }
}

/**
 * @dev Required interface of an ERC721 compliant contract.
 */
interface IERC721 is IERC165 {
    /**
     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.
     */
    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);

    /**
     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.
     */
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);

    /**
     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.
     */
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);

    /**
     * @dev Returns the number of tokens in ``owner``'s account.
     */
    function balanceOf(address owner) external view returns (uint256 balance);

    /**
     * @dev Returns the owner of the `tokenId` token.
     *
     * Requirements:
     *
     * - `tokenId` must exist.
     */
    function ownerOf(uint256 tokenId) external view returns (address owner);

    /**
     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients
     * are aware of the ERC721 protocol to prevent tokens from being forever locked.
     *
     * Requirements:
     *
     * - `from` cannot be the zero address.
     * - `to` cannot be the zero address.
     * - `tokenId` token must exist and be owned by `from`.
     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.
     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.
     *
     * Emits a {Transfer} event.
     */
    function safeTransferFrom(
        address from,
        address to,
        uint256 tokenId
    ) external;

    /**
     * @dev Transfers `tokenId` token from `from` to `to`.
     *
     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.
     *
     * Requirements:
     *
     * - `from` cannot be the zero address.
     * - `to` cannot be the zero address.
     * - `tokenId` token must be owned by `from`.
     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.
     *
     * Emits a {Transfer} event.
     */
    function transferFrom(
        address from,
        address to,
        uint256 tokenId
    ) external;

    /**
     * @dev Gives permission to `to` to transfer `tokenId` token to another account.
     * The approval is cleared when the token is transferred.
     *
     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.
     *
     * Requirements:
     *
     * - The caller must own the token or be an approved operator.
     * - `tokenId` must exist.
     *
     * Emits an {Approval} event.
     */
    function approve(address to, uint256 tokenId) external;

    /**
     * @dev Returns the account approved for `tokenId` token.
     *
     * Requirements:
     *
     * - `tokenId` must exist.
     */
    function getApproved(uint256 tokenId) external view returns (address operator);

    /**
     * @dev Approve or remove `operator` as an operator for the caller.
     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.
     *
     * Requirements:
     *
     * - The `operator` cannot be the caller.
     *
     * Emits an {ApprovalForAll} event.
     */
    function setApprovalForAll(address operator, bool _approved) external;

    /**
     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.
     *
     * See {setApprovalForAll}
     */
    function isApprovedForAll(address owner, address operator) external view returns (bool);

    /**
     * @dev Safely transfers `tokenId` token from `from` to `to`.
     *
     * Requirements:
     *
     * - `from` cannot be the zero address.
     * - `to` cannot be the zero address.
     * - `tokenId` token must exist and be owned by `from`.
     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.
     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.
     *
     * Emits a {Transfer} event.
     */
    function safeTransferFrom(
        address from,
        address to,
        uint256 tokenId,
        bytes calldata data
    ) external;
}

// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol


// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Enumerable.sol)

pragma solidity ^0.8.0;


/**
 * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension
 * @dev See https://eips.ethereum.org/EIPS/eip-721
 */
interface IERC721Enumerable is IERC721 {
    /**
     * @dev Returns the total amount of tokens stored by the contract.
     */
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.
     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.
     */
    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);

    /**
     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.
     * Use along with {totalSupply} to enumerate all tokens.
     */
    function tokenByIndex(uint256 index) external view returns (uint256);
}

// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol


// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)

pragma solidity ^0.8.0;


/**
 * @title ERC-721 Non-Fungible Token Standard, optional metadata extension
 * @dev See https://eips.ethereum.org/EIPS/eip-721
 */
interface IERC721Metadata is IERC721 {
    /**
     * @dev Returns the token collection name.
     */
    function name() external view returns (string memory);

    /**
     * @dev Returns the token collection symbol.
     */
    function symbol() external view returns (string memory);

    /**
     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.
     */
    function tokenURI(uint256 tokenId) external view returns (string memory);
}

/**
 * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including
 * the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.
 *
 * Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).
 *
 * Does not support burning tokens to address(0).
 *
 * Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply
 */
// OpenZeppelin Contracts v4.4.0 (finance/PaymentSplitter.sol)

pragma solidity  ^0.8.4;

/**
 * @title PaymentSplitter
 * @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware
 * that the Ether will be split in this way, since it is handled transparently by the contract.
 *
 * The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each
 * account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim
 * an amount proportional to the percentage of total shares they were assigned.
 *
 * `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the
 * accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}
 * function.
 *
 * NOTE: This contract assumes that ERC20 tokens will behave similarly to native tokens (Ether). Rebasing tokens, and
 * tokens that apply fees during transfers, are likely to not be supported as expected. If in doubt, we encourage you
 * to run tests before sending real value to this contract.
 */

contract PaymentSplitter is Context {
    event PayeeAdded(address account, uint256 shares);
    event PaymentReleased(address to, uint256 amount);
    event ERC20PaymentReleased(IERC20 indexed token, address to, uint256 amount);
    event PaymentReceived(address from, uint256 amount);

    uint256 private _totalShares;
    uint256 private _totalReleased;

    mapping(address => uint256) private _shares;
    mapping(address => uint256) private _released;
    address[] private _payees;

    mapping(IERC20 => uint256) private _erc20TotalReleased;
    mapping(IERC20 => mapping(address => uint256)) private _erc20Released;

    /**
     * @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at
     * the matching position in the `shares` array.
     *
     * All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no
     * duplicates in `payees`.
     */
    constructor(address[] memory payees, uint256[] memory shares_) payable {
        require(payees.length == shares_.length, "PaymentSplitter: payees and shares length mismatch");
        require(payees.length > 0, "PaymentSplitter: no payees");

        for (uint256 i = 0; i < payees.length; i++) {
            _addPayee(payees[i], shares_[i]);
        }
    }

    /**
     * @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully
     * reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the
     * reliability of the events, and not the actual splitting of Ether.
     *
     * To learn more about this see the Solidity documentation for
     * https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback
     * functions].
     */
    receive() external payable virtual {
        emit PaymentReceived(_msgSender(), msg.value);
    }

    /**
     * @dev Getter for the total shares held by payees.
     */
    function totalShares() public view returns (uint256) {
        return _totalShares;
    }

    /**
     * @dev Getter for the total amount of Ether already released.
     */
    function totalReleased() public view returns (uint256) {
        return _totalReleased;
    }

    /**
     * @dev Getter for the total amount of `token` already released. `token` should be the address of an IERC20
     * contract.
     */
    function totalReleased(IERC20 token) public view returns (uint256) {
        return _erc20TotalReleased[token];
    }

    /**
     * @dev Getter for the amount of shares held by an account.
     */
    function shares(address account) public view returns (uint256) {
        return _shares[account];
    }

    /**
     * @dev Getter for the amount of Ether already released to a payee.
     */
    function released(address account) public view returns (uint256) {
        return _released[account];
    }

    /**
     * @dev Getter for the amount of `token` tokens already released to a payee. `token` should be the address of an
     * IERC20 contract.
     */
    function released(IERC20 token, address account) public view returns (uint256) {
        return _erc20Released[token][account];
    }

    /**
     * @dev Getter for the address of the payee number `index`.
     */
    function payee(uint256 index) public view returns (address) {
        return _payees[index];
    }

    /**
     * @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the
     * total shares and their previous withdrawals.
     */
    function release(address payable account) public virtual {
        require(_shares[account] > 0, "PaymentSplitter: account has no shares");

        uint256 totalReceived = address(this).balance + totalReleased();
        uint256 payment = _pendingPayment(account, totalReceived, released(account));

        require(payment != 0, "PaymentSplitter: account is not due payment");

        _released[account] += payment;
        _totalReleased += payment;

        Address.sendValue(account, payment);
        emit PaymentReleased(account, payment);
    }

    /**
     * @dev Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their
     * percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20
     * contract.
     */
    function release(IERC20 token, address account) public virtual {
        require(_shares[account] > 0, "PaymentSplitter: account has no shares");

        uint256 totalReceived = token.balanceOf(address(this)) + totalReleased(token);
        uint256 payment = _pendingPayment(account, totalReceived, released(token, account));

        require(payment != 0, "PaymentSplitter: account is not due payment");

        _erc20Released[token][account] += payment;
        _erc20TotalReleased[token] += payment;

        SafeERC20.safeTransfer(token, account, payment);
        emit ERC20PaymentReleased(token, account, payment);
    }

    /**
     * @dev internal logic for computing the pending payment of an `account` given the token historical balances and
     * already released amounts.
     */
    function _pendingPayment(
        address account,
        uint256 totalReceived,
        uint256 alreadyReleased
    ) private view returns (uint256) {
        return (totalReceived * _shares[account]) / _totalShares - alreadyReleased;
    }

    /**
     * @dev Add a new payee to the contract.
     * @param account The address of the payee to add.
     * @param shares_ The number of shares owned by the payee.
     */
    function _addPayee(address account, uint256 shares_) private {
        require(account != address(0), "PaymentSplitter: account is the zero address");
        require(shares_ > 0, "PaymentSplitter: shares are 0");
        require(_shares[account] == 0, "PaymentSplitter: account already has shares");

        _payees.push(account);
        _shares[account] = shares_;
        _totalShares = _totalShares + shares_;
        emit PayeeAdded(account, shares_);
    }
}

// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)

pragma solidity  ^0.8.4;

/**
 * @title SafeERC20
 * @dev Wrappers around ERC20 operations that throw on failure (when the token
 * contract returns false). Tokens that return no value (and instead revert or
 * throw on failure) are also supported, non-reverting calls are assumed to be
 * successful.
 * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,
 * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.
 */
library SafeERC20 {
    using Address for address;

    function safeTransfer(
        IERC20 token,
        address to,
        uint256 value
    ) internal {
        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));
    }

    function safeTransferFrom(
        IERC20 token,
        address from,
        address to,
        uint256 value
    ) internal {
        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));
    }

    /**
     * @dev Deprecated. This function has issues similar to the ones found in
     * {IERC20-approve}, and its usage is discouraged.
     *
     * Whenever possible, use {safeIncreaseAllowance} and
     * {safeDecreaseAllowance} instead.
     */
    function safeApprove(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        // safeApprove should only be called when setting an initial allowance,
        // or when resetting it to zero. To increase and decrease it, use
        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'
        require(
            (value == 0) || (token.allowance(address(this), spender) == 0),
            "SafeERC20: approve from non-zero to non-zero allowance"
        );
        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));
    }

    function safeIncreaseAllowance(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        uint256 newAllowance = token.allowance(address(this), spender) + value;
        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));
    }

    function safeDecreaseAllowance(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        unchecked {
            uint256 oldAllowance = token.allowance(address(this), spender);
            require(oldAllowance >= value, "SafeERC20: decreased allowance below zero");
            uint256 newAllowance = oldAllowance - value;
            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));
        }
    }

    /**
     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement
     * on the return value: the return value is optional (but if data is returned, it must not be false).
     * @param token The token targeted by the call.
     * @param data The call data (encoded using abi.encode or one of its variants).
     */
    function _callOptionalReturn(IERC20 token, bytes memory data) private {
        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since
        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that
        // the target address contains contract code and also asserts for success in the low-level call.

        bytes memory returndata = address(token).functionCall(data, "SafeERC20: low-level call failed");
        if (returndata.length > 0) {
            // Return data is optional
            require(abi.decode(returndata, (bool)), "SafeERC20: ERC20 operation did not succeed");
        }
    }
}

 // OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)

pragma solidity  ^0.8.4;

/**
 * @dev Interface of the ERC20 standard as defined in the EIP.
 */
interface IERC20 {
    /**
     * @dev Returns the amount of tokens in existence.
     */
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);

    /**
     * @dev Moves `amount` tokens from the caller's account to `recipient`.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * Emits a {Transfer} event.
     */
    function transfer(address recipient, uint256 amount) external returns (bool);

    /**
     * @dev Returns the remaining number of tokens that `spender` will be
     * allowed to spend on behalf of `owner` through {transferFrom}. This is
     * zero by default.
     *
     * This value changes when {approve} or {transferFrom} are called.
     */
    function allowance(address owner, address spender) external view returns (uint256);

    /**
     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * IMPORTANT: Beware that changing an allowance with this method brings the risk
     * that someone may use both the old and the new allowance by unfortunate
     * transaction ordering. One possible solution to mitigate this race
     * condition is to first reduce the spender's allowance to 0 and set the
     * desired value afterwards:
     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
     *
     * Emits an {Approval} event.
     */
    function approve(address spender, uint256 amount) external returns (bool);

    /**
     * @dev Moves `amount` tokens from `sender` to `recipient` using the
     * allowance mechanism. `amount` is then deducted from the caller's
     * allowance.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * Emits a {Transfer} event.
     */
    function transferFrom(
        address sender,
        address recipient,
        uint256 amount
    ) external returns (bool);

    /**
     * @dev Emitted when `value` tokens are moved from one account (`from`) to
     * another (`to`).
     *
     * Note that `value` may be zero.
     */
    event Transfer(address indexed from, address indexed to, uint256 value);

    /**
     * @dev Emitted when the allowance of a `spender` for an `owner` is set by
     * a call to {approve}. `value` is the new allowance.
     */
    event Approval(address indexed owner, address indexed spender, uint256 value);
}

abstract contract ERC721A is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable, PaymentSplitter {
    using Address for address;
    using Strings for uint256;

    struct TokenOwnership {
        address addr;
        uint64 startTimestamp;
    }

    struct AddressData {
        uint128 balance;
        uint128 numberMinted;
    }

    uint256 internal currentIndex = 1;

    // Token name
    string private _name;

    // Token symbol
    string private _symbol;

    // Mapping from token ID to ownership details
    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.
    mapping(uint256 => TokenOwnership) internal _ownerships;

    // Mapping owner address to address data
    mapping(address => AddressData) private _addressData;

    // Mapping from token ID to approved address
    mapping(uint256 => address) private _tokenApprovals;

    // Mapping from owner to operator approvals
    mapping(address => mapping(address => bool)) private _operatorApprovals;

    constructor(string memory name_, string memory symbol_) {
        _name = name_;
        _symbol = symbol_;
    }

    /**
     * @dev See {IERC721Enumerable-totalSupply}.
     */
    function totalSupply() public view override returns (uint256) {
        return currentIndex;
    }

    /**
     * @dev See {IERC721Enumerable-tokenByIndex}.
     */
    function tokenByIndex(uint256 index) public view override returns (uint256) {
        require(index < totalSupply(), 'ERC721A: global index out of bounds');
        return index;
    }

    /**
     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.
     * This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.
     * It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.
     */
    function tokenOfOwnerByIndex(address owner, uint256 index) public view override returns (uint256) {
        require(index < balanceOf(owner), 'ERC721A: owner index out of bounds');
        uint256 numMintedSoFar = totalSupply();
        uint256 tokenIdsIdx = 0;
        address currOwnershipAddr = address(0);
        for (uint256 i = 0; i < numMintedSoFar; i++) {
            TokenOwnership memory ownership = _ownerships[i];
            if (ownership.addr != address(0)) {
                currOwnershipAddr = ownership.addr;
            }
            if (currOwnershipAddr == owner) {
                if (tokenIdsIdx == index) {
                    return i;
                }
                tokenIdsIdx++;
            }
        }
        revert('ERC721A: unable to get token of owner by index');
    }

    /**
     * @dev See {IERC165-supportsInterface}.
     */
    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {
        return
            interfaceId == type(IERC721).interfaceId ||
            interfaceId == type(IERC721Metadata).interfaceId ||
            interfaceId == type(IERC721Enumerable).interfaceId ||
            super.supportsInterface(interfaceId);
    }

    /**
     * @dev See {IERC721-balanceOf}.
     */
    function balanceOf(address owner) public view override returns (uint256) {
        require(owner != address(0), 'ERC721A: balance query for the zero address');
        return uint256(_addressData[owner].balance);
    }

    function _numberMinted(address owner) internal view returns (uint256) {
        require(owner != address(0), 'ERC721A: number minted query for the zero address');
        return uint256(_addressData[owner].numberMinted);
    }

    /**
     * Gas spent here starts off proportional to the maximum mint batch size.
     * It gradually moves to O(1) as tokens get transferred around in the collection over time.
     */
    function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {
        require(_exists(tokenId), 'ERC721A: owner query for nonexistent token');

        for (uint256 curr = tokenId; ; curr--) {
            TokenOwnership memory ownership = _ownerships[curr];
            if (ownership.addr != address(0)) {
                return ownership;
            }
        }

        revert('ERC721A: unable to determine the owner of token');
    }

    /**
     * @dev See {IERC721-ownerOf}.
     */
    function ownerOf(uint256 tokenId) public view override returns (address) {
        return ownershipOf(tokenId).addr;
    }

    /**
     * @dev See {IERC721Metadata-name}.
     */
    function name() public view virtual override returns (string memory) {
        return _name;
    }

    /**
     * @dev See {IERC721Metadata-symbol}.
     */
    function symbol() public view virtual override returns (string memory) {
        return _symbol;
    }

    /**
     * @dev See {IERC721Metadata-tokenURI}.
     */
    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {
        require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token');

        string memory baseURI = _baseURI();
        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';
    }

    /**
     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each
     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty
     * by default, can be overriden in child contracts.
     */
    function _baseURI() internal view virtual returns (string memory) {
        return '';
    }

    /**
     * @dev See {IERC721-approve}.
     */
    function approve(address to, uint256 tokenId) public override {
        address owner = ERC721A.ownerOf(tokenId);
        require(to != owner, 'ERC721A: approval to current owner');

        require(
            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),
            'ERC721A: approve caller is not owner nor approved for all'
        );

        _approve(to, tokenId, owner);
    }

    /**
     * @dev See {IERC721-getApproved}.
     */
    function getApproved(uint256 tokenId) public view override returns (address) {
        require(_exists(tokenId), 'ERC721A: approved query for nonexistent token');

        return _tokenApprovals[tokenId];
    }

    /**
     * @dev See {IERC721-setApprovalForAll}.
     */
    function setApprovalForAll(address operator, bool approved) public override {
        require(operator != _msgSender(), 'ERC721A: approve to caller');

        _operatorApprovals[_msgSender()][operator] = approved;
        emit ApprovalForAll(_msgSender(), operator, approved);
    }

    /**
     * @dev See {IERC721-isApprovedForAll}.
     */
    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {
        return _operatorApprovals[owner][operator];
    }

    /**
     * @dev See {IERC721-transferFrom}.
     */
    function transferFrom(
        address from,
        address to,
        uint256 tokenId
    ) public override {
        _transfer(from, to, tokenId);
    }

    /**
     * @dev See {IERC721-safeTransferFrom}.
     */
    function safeTransferFrom(
        address from,
        address to,
        uint256 tokenId
    ) public override {
        safeTransferFrom(from, to, tokenId, '');
    }

    /**
     * @dev See {IERC721-safeTransferFrom}.
     */
    function safeTransferFrom(
        address from,
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public override {
        _transfer(from, to, tokenId);
        require(
            _checkOnERC721Received(from, to, tokenId, _data),
            'ERC721A: transfer to non ERC721Receiver implementer'
        );
    }

    /**
     * @dev Returns whether `tokenId` exists.
     *
     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.
     *
     * Tokens start existing when they are minted (`_mint`),
     */
    function _exists(uint256 tokenId) internal view returns (bool) {
        return tokenId < currentIndex;
    }

    function _safeMint(address to, uint256 quantity) internal {
        _safeMint(to, quantity, '');
    }

    /**
     * @dev Safely mints `quantity` tokens and transfers them to `to`.
     *
     * Requirements:
     *
     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.
     * - `quantity` must be greater than 0.
     *
     * Emits a {Transfer} event.
     */
    function _safeMint(
        address to,
        uint256 quantity,
        bytes memory _data
    ) internal {
        _mint(to, quantity, _data, true);
    }

    /**
     * @dev Mints `quantity` tokens and transfers them to `to`.
     *
     * Requirements:
     *
     * - `to` cannot be the zero address.
     * - `quantity` must be greater than 0.
     *
     * Emits a {Transfer} event.
     */
    function _mint(
        address to,
        uint256 quantity,
        bytes memory _data,
        bool safe
    ) internal {
        uint256 startTokenId = currentIndex;
        require(to != address(0), 'ERC721A: mint to the zero address');
        // We know if the first token in the batch doesn't exist, the other ones don't as well, because of serial ordering.
        require(!_exists(startTokenId), 'ERC721A: token already minted');
        require(quantity > 0, 'ERC721A: quantity must be greater than 0');

        _beforeTokenTransfers(address(0), to, startTokenId, quantity);

        _addressData[to].balance += uint128(quantity);
        _addressData[to].numberMinted += uint128(quantity);

        _ownerships[startTokenId].addr = to;
        _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);

        uint256 updatedIndex = startTokenId;

        for (uint256 i = 0; i < quantity; i++) {
            emit Transfer(address(0), to, updatedIndex);
            if (safe) {
                require(
                    _checkOnERC721Received(address(0), to, updatedIndex, _data),
                    'ERC721A: transfer to non ERC721Receiver implementer'
                );
            }
            updatedIndex++;
        }

        currentIndex = updatedIndex;
        _afterTokenTransfers(address(0), to, startTokenId, quantity);
    }

    /**
     * @dev Transfers `tokenId` from `from` to `to`.
     *
     * Requirements:
     *
     * - `to` cannot be the zero address.
     * - `tokenId` token must be owned by `from`.
     *
     * Emits a {Transfer} event.
     */
    function _transfer(
        address from,
        address to,
        uint256 tokenId
    ) private {
        TokenOwnership memory prevOwnership = ownershipOf(tokenId);

        bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||
            getApproved(tokenId) == _msgSender() ||
            isApprovedForAll(prevOwnership.addr, _msgSender()));

        require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved');

        require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner');
        require(to != address(0), 'ERC721A: transfer to the zero address');

        _beforeTokenTransfers(from, to, tokenId, 1);

        // Clear approvals from the previous owner
        _approve(address(0), tokenId, prevOwnership.addr);

        // Underflow of the sender's balance is impossible because we check for
        // ownership above and the recipient's balance can't realistically overflow.
        unchecked {
            _addressData[from].balance -= 1;
            _addressData[to].balance += 1;
        }

        _ownerships[tokenId].addr = to;
        _ownerships[tokenId].startTimestamp = uint64(block.timestamp);

        // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.
        // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.
        uint256 nextTokenId = tokenId + 1;
        if (_ownerships[nextTokenId].addr == address(0)) {
            if (_exists(nextTokenId)) {
                _ownerships[nextTokenId].addr = prevOwnership.addr;
                _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;
            }
        }

        emit Transfer(from, to, tokenId);
        _afterTokenTransfers(from, to, tokenId, 1);
    }

    /**
     * @dev Approve `to` to operate on `tokenId`
     *
     * Emits a {Approval} event.
     */
    function _approve(
        address to,
        uint256 tokenId,
        address owner
    ) private {
        _tokenApprovals[tokenId] = to;
        emit Approval(owner, to, tokenId);
    }

    /**
     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.
     * The call is not executed if the target address is not a contract.
     *
     * @param from address representing the previous owner of the given token ID
     * @param to target address that will receive the tokens
     * @param tokenId uint256 ID of the token to be transferred
     * @param _data bytes optional data to send along with the call
     * @return bool whether the call correctly returned the expected magic value
     */
    function _checkOnERC721Received(
        address from,
        address to,
        uint256 tokenId,
        bytes memory _data
    ) private returns (bool) {
        if (to.isContract()) {
            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {
                return retval == IERC721Receiver(to).onERC721Received.selector;
            } catch (bytes memory reason) {
                if (reason.length == 0) {
                    revert('ERC721A: transfer to non ERC721Receiver implementer');
                } else {
                    assembly {
                        revert(add(32, reason), mload(reason))
                    }
                }
            }
        } else {
            return true;
        }
    }

    /**
     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.
     *
     * startTokenId - the first token id to be transferred
     * quantity - the amount to be transferred
     *
     * Calling conditions:
     *
     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be
     * transferred to `to`.
     * - When `from` is zero, `tokenId` will be minted for `to`.
     */
    function _beforeTokenTransfers(
        address from,
        address to,
        uint256 startTokenId,
        uint256 quantity
    ) internal virtual {}

    /**
     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes
     * minting.
     *
     * startTokenId - the first token id to be transferred
     * quantity - the amount to be transferred
     *
     * Calling conditions:
     *
     * - when `from` and `to` are both non-zero.
     * - `from` and `to` are never both zero.
     */
    function _afterTokenTransfers(
        address from,
        address to,
        uint256 startTokenId,
        uint256 quantity
    ) internal virtual {}
}

// OpenZeppelin Contracts v4.4.0 (utils/Counters.sol)

pragma solidity  ^0.8.4;

/**
 * @title Counters
 * @author Matt Condon (@shrugs)
 * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number
 * of elements in a mapping, issuing ERC721 ids, or counting request ids.
 *
 * Include with `using Counters for Counters.Counter;`
 */
library Counters {
    struct Counter {
        // This variable should never be directly accessed by users of the library: interactions must be restricted to
        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add
        // this feature: see https://github.com/ethereum/solidity/issues/4637
        uint256 _value; // default: 0
    }

    function current(Counter storage counter) internal view returns (uint256) {
        return counter._value;
    }

    function increment(Counter storage counter) internal {
        unchecked {
            counter._value += 1;
        }
    }

    function decrement(Counter storage counter) internal {
        uint256 value = counter._value;
        require(value > 0, "Counter: decrement overflow");
        unchecked {
            counter._value = value - 1;
        }
    }

    function reset(Counter storage counter) internal {
        counter._value = 0;
    }
}

contract TheStartup is ERC721A {
// Setup

    using Counters for Counters.Counter;
    Counters.Counter private _tokenSupply;

    mapping (address => uint8) public _minted;
    uint private SalePrice= 0.24 ether;
    uint public reachedCapPrice;
    uint16 public maxSupply;
    uint8 public maxPerTx;
    uint8 public maxPerWallet;

    bool public publicMintStatus;

    string public baseURI;

    address private owner;

    function _baseURI() internal view override returns (string memory) {
        return baseURI;
    }
    
    function setBaseURI(string memory _newBaseURI) external onlyOwner {
        baseURI = _newBaseURI;
    }

    function setSalePrice(uint price) external onlyOwner {
        SalePrice = price;
    }

    function setReachedCapPrice(uint price) external onlyOwner {
        reachedCapPrice = price;
    }

    function setMaxSupply(uint16 supply) external onlyOwner {
        maxSupply = supply;
    }


    function setMaxPerTx(uint8 max) external onlyOwner {
        maxPerTx = max;
    }

    function setMaxPerWallet(uint8 max) external onlyOwner {
        maxPerWallet = max;
    }

    function setPublicMintStatus() external onlyOwner {
        publicMintStatus = !publicMintStatus;
    }

    function withdraw() external onlyOwner {
        payable(msg.sender).transfer(address(this).balance);
    }

    modifier onlyOwner {
        require(owner == msg.sender, "Not the owner!");
        _;
    }

    function transferOwnership(address newOwner) external onlyOwner {
        owner = newOwner;
    }

constructor(address[] memory _payees, uint256[] memory _shares) ERC721A("The Startup", "FMC") PaymentSplitter(_payees, _shares) {
        _mintCards(msg.sender, 5);
        owner = msg.sender;
    }    

// Allows the team to mint Cards to a destination address
    function promoMint(address _to, uint amount) external onlyOwner {
        require(amount > 0, "Mint 1");
        require(totalSupply() + amount < 10_001, 'Exceeds max supply');
        _mintCards(_to, amount);
    }

    function _mintCards(address _to, uint amount) internal {
        for(uint i = 0; i < amount; i++) {
            _tokenSupply.increment();
            _safeMint(_to, totalSupply());
        }
    }

    function publicMint(uint8 amount) external payable {
        require(publicMintStatus, "Sale not active!");
        require(currentIndex + amount <= maxSupply + 1, "Not enough tokens to sell!");
        require(amount <= maxPerTx, "Incorrect amount!");
        require(_minted[msg.sender] + amount <= maxPerWallet, "Incorrect amount!");
_mintCards(msg.sender, amount);
        if(currentIndex + amount > 1000){
            require(msg.value == reachedCapPrice * amount, "Incorrect amount!");
            _safeMint(msg.sender, amount);
            _minted[msg.sender] += amount;
        }else{
            require(msg.value == SalePrice * amount, "Incorrect amount!");
            _safeMint(msg.sender, amount);
            _minted[msg.sender] += amount;
        }
    }
}