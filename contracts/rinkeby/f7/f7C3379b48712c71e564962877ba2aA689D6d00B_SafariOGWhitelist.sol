// SPDX-License-Identifier: MIT LICENSE

pragma solidity ^0.8.0;

contract SafariOGWhitelist {
  bytes internal offsets = hex"0000001800300048005a006600780084009600ae00f001080108010e014a0162018601a401bc01e001ec01f80204021c025202700288028e02a602c402d602dc02f402fa0300031e03360348035a0372038403a803d204080426043e046e048604a404c204e6051c053a055e058205a005b805dc0606061806540678069006a206b406d206ea07020714072c0732074407560774079e07bc07da07e607f2081c083a084608520864087c08a608ac08be08d008e80906091e093c094e097209ae09b409cc09de09ea09fc0a020a1a0a2c0a3e0a620a800aa40ab00ac20ae00b040b1c0b460b640b7c0b940bac0bca0bee0bfa0c0c0c180c2a0c480c5a0c6c0c840c960cae0cd20cde0cf00d080d0e0d4a0d560d7a0d980da40dc20dce0de60dfe0e100e220e4c0e6a0e820ea00eac0ec40ee20f060f360f660f840fa80fc00fde0ff010081020103810441062106e107a1086109810b010d410f2111c11401164118211a011b811dc120c12361254127812b412c612e412f6130e1320133213441362138c13a413c213da13e613fe140a1428143a14521476147c1488149a14b814e2150c153615481560157e15ae15c615ea15fc161a1632163e164a16681686169216bc16bc16c216e0170a172817461776179417a017b817dc180c182418361860188a18a818ba18cc18f01908192c1956197a19a419c219e019ec1a101a221a34";

  bytes internal items = hex"0000000000041b26000000018ca400000003fcdd00000007337300000002353c000001009e5c00000004caaf00000100045b0000000128850000000f35ba00000001736d00000002004900000001893300000005d0f900000001cd3800000001ebe800000001005000000001235500000001379b00000001737000000009cd18000000023f0d00000005538a00000028d7d70000000215910000010535bf000000063ff900000001b071000000030deb000000012700000000082dfe000000015647000000075f330000000460ca0000000373c2000000068f5c00000100bde20000020be3b50000000ce4800000000107bd00000001465700000003848400000003fb20000000190ac7000000014640000000025eeb0000000273aa0000000b77c6000000017c7100000005804e000001038b3a00000001cf5700000006d18200000004df260000010968ec00000002815c00000002916100000001b50c00000001600500000001817600000003932500000014e82600000002e8590000000eeb6e000000040825000000010f5b00000002a78700000001c89f00000001d353000000012b3200000001a54d00000001e46500000002ef200000000843d00000000454f4000000015e5100000001adc000000003b11500000002c782000000025d02000000026db700000002246f00000004a74800000002093000000001e8750000010927990000000539490000000549e200000002f2ba0000000221e40000000350ca0000000267350000000370c6000000017a6800000007b64c00000004c6e900000001c73800000105d41100000003494f0000010454fe00000001996200000005bd7c00000003e25a0000000422dd00000002391d00000004b0cc00000201b446000000057bd900000001293700000085a90d0000003aabe300000003f3a7000001081f6b000000012943000000032b72000000053c3600000100c3190000000aa5b800000001c30100000432cc7e000000042316000000051041000000018c3d000000018cef0000000392c00000010ae4b2000000048d560000000f62b7000000027b68000000038f9f00000001d82900000001fc3100000001851700000001a17f00000001b2db00000007c1e1000000079a49000000029f9300000003e5ed00000002044000000001b90700000001cd0c00000001631e00000003b02000000002deb000000004f640000000019ea000000003b75500000007c5930000000505dc0000000208f000000001a69f00000001b4d600000009dcf600000001e76a000000010ded0000000232b300000001480300000105c9e000000001e76a00000307e9b200000003fdb00000000400f6000000050e4e00000001140600000001193c000000034040000000025ba60000000c849a00000003c93e00000009ebaa0000000411300000000136100000010367200000000277fb0000000a83ae0000000519bc0000000196e400000002c41100000003f00e0000000332f0000000014eb9000000026cea000000017e60000000048e6c00000003a65e00000100bacd00000001f65f000000052673000000023c4100000003c20600000003ea47000000010e040000000216040000000350f500000001c06600000001f0260000000155b4000000307e7900000005904600000002a21e00000002fcc80000000106f400000002171d000000066a8e000000019e9200000001c4eb00000111ddf4000000010562000000020beb0000010913f50000000114550000000138bf000000016696000000016c500000000a707400000001e37a0000000100ce0000000239c20000000662c90000000ca10700000005e2a8000000044e2a000000015f2d00000005996600000003a08200000002b5f300000003f3600000000a34b200000004721500000002bd1700000003bd320000000bbe2700000004e94d000000047fc700000001852d00000004961500000006b73f00000003be2b000000011b4b00000008294500000001a8f800000001e22900000001439f00006e0344d4000000074ca5000000035ce10000000283550000000286c500000109168900000004206000000002486100000002542e000000016b8e00000002970c000000019b6700000001136400000003693500000006f7f80000000221d700000005639b0000000269be0000010090c900000003977a00000002af3400000012b62700000002bd8d00000001c44100000002eff80000000113c2000000012b07000000064cad0000020b5c9700000002702500000005dd9b0000000177f9000000017fa0000000029f18000000019f92000000018f0b00000007e98d00000002fa38000000032ca7000000026e0800000003aaa60000000331490000000146d3000000014c5e00000001711b0000002fee01000000011c4b000000062be8000000013c0a00000001bba8000000011ab90000000521e200000002bdb500000002f34400000212547b00000002691300000001db5d000000031029000000012dcc00000009c5db00000003cabd00000008ce930000000405d80000000289a800000004f41d00000004326e0000000143e50000000167d4000000012f9b000000023b610000000b920e000000029a0f00000028e148000000123b360000000349d40000000c7dfb00000001819300000002918d000000049b9100000001cfba00000003124c000000027e8d00000009915e00000008b6c000000006eb500000000232f80000000539cd0000000169be000000029a1600000002aa9200000002618d00000101888e0000000442d600000003c675000000111e7f000001012cb200000105613500000002743600000003a01d00000001a11100000009e83c000000032404000000016b8200000006aff700000009b8b700000001f33d000000040e4300000013368600000107c2bc00000004ef2b000000041a19000000035a52000000056f78000000032ff6000000018d4d00000003cfa100000002da6f00000100349c0000000138f00000000855760000000159f0000000016a110000000192ac00000001f2eb00000002e1740000000710f1000000021b5500000100543700000002021800000005145000000001e259000000011a9c000000011bd400000007a49d00000001d70b0000000305e9000000021f8a0000000f8e1600000002b27200000002e0d00000000117fb000000039b6400000002cba600000001f75200000002049c0000001b17d1000000044f870000010374c300000003b054000000043311000000024dda000000017a9f0000000f17c2000000012c6e0000001e7a4b00000001b60200000001e37d00000001ec6e00000004067900000001070c000000010c3d000000115c8100000004ae8500000002b27c00000001b2b000000003b5dc00000006e2c700000002e83200000004d8dc0000000430a0000000044cb80000000150270000000173b70000020175cc000000017ea900000002933d00000001222900000003a15000000004035f0000000938e800000001c8e10000000444ff000000053bcd000000025d5200000001dcf700000003ea52000000028e960000000e9035000000039e2500000001159a000000019be800006c01c30900000002372a000001123cb40000000c419f000000018ad500000001ae4400000002b53a000000023285000000013969000000013a0f000000026f11000000098ce70000000103fd000000010d47000001003bf1000002123c1c00000001c5d10000000dcb80000000020dd3000000012b43000000010811000000013da300000001712f0000000384ab00000002877a000000038e51000000029b0000000007a248000000014dcb000000035349000000018a5b0000000898af00000002d11800000001db820000010a4f7a00000005b9a800000004e19a00000005e97d0000000407d3000001070a4d000000031ab500000002a5e000000002a85100000004cdc500000001e4d7000000085766000000056031000000027bb9000000029aec00000001ab7a000000015062000000027f2500000006c33100000001d6930000010a3f4d000000034cab00000004854c0000000b91970000000635a000000001a26800000004e6ce00000002f0e6000000011aac00000002594b00000002915e0000020693f900000002eb44000002012f37000000034abe000000019beb00000001c69400000017daf100000002f2bf0000000129a500000002e276000000020fa60000001559c700000003eae40000000101cc0000000214cf000001031ded00000004a76500000029eaf4000000015b24000000016be90000000c8e5000000001adca00000001ea5800000005689e00000005982c000000059a70000000023fbf00000001737400000003a8dd00000001b20800000001c68a00000100f0f100000001f61c000004151c1e00000001648e0000000a915c000000036b0e000000037d370000000295d700000001eb13000000062763000000032efa000000013d9a00000004729700000001c48700000005cd1b000003000da40000010be8e9000001051dcd000000024b4700000001c1ba00000002314400000001451d00000002e0f900000002ecbe00000001ccac0000000300b4000000012007000000015d1f0000000260fc00000004649d00000001688000000101781d000000107d2f000000017ec3000000028c8100000001483200000003d96700000002004a0000000418d0000000028d740000000292c8000000019bfc00000001b952000000010282000000014c43000000025a37000000039caf00000008aa0d00000005362700000003fb3a0000000231ce00000001732c00000002d98300000001ea6700000002ec84000000018d2c00000002aa11000000032b7900000001d98800000002e16b00000001fe9c00000003182f00000001a3dc00000001aaf800000002e76e000001006da000000002913600000001c622000000021df200000003477d00000002c400000000011ff20000000340e3000000038e940000000193f300000002b08500000004cda40000010cf34a000002021c0b0000020620ae00000001756200000004b1bd00000002e9b9000000011318000000022dc50000000384f200000002e11c000001013a4800000001446f00000003979700000001c1cd00000001f04100000001012c00000003896d000000010aea00000002233400000002a3420000000bf91e0000000160f40000000174bf00000001916e00000016b10f00000001bf8d000000012e09000000114b18000000019ed400000003b9cf00000002fdf300000002ff0800000001010a000000046e1d0000023e834100000108881c0000000a9e5800000001aa2f00000001c46100000002ec060000000127b8000000012d3e000000074dbc0000000175a600000001796000000001a98500000002d3c000000001e94700000001330c0000000a5932000000015aec000000016a4000000007e550000001024ca7000000054f9b00000103530500000003621000000001cfae0000000ee7a9000000014f7d000000016f7900000002c73c00000009e120000000028d7a00000001b3350000000fbb0500000001d81900000001d915000000012909000000012f310000020971b100000001196b00000005593d00000001ee1d00000004efdc00000b0006130000000153dc000000019ecd00000101cff300000007449b00000004cc9f00000001d06f00000003ea5500000005285600000102e567000000011e460000000132b0000000019b0700000100adc800000002b4910000000e622200000002890f0000000a45b4000000038e15000000039e1000000009f034000000010935000000090d78000000041feb000000034db100000001525900000002c86c00000002f9c00000000151300000000454fa000000076ea5000000019d3900000003a3a500000003e3090000000101110000000525750000000730340000000134d60000000187090000000c159c000000014b880000000167720000000282170000000194e000000008a57300000001ca38000000013904000000014cc90000000177d500000001b04000000003c35400000006c3c100000001926000000005c29d00000001da870000000ade7500000001ef6700000001f605000000021cc50000000551720000010c84b600000001c4cb00000002fc8b0000010300dd000000012ac8000000019dc800000001a2cf00000001acf000000104bd9400000007c75400000003e0f700000001f9640000000105be0000000440220000000254d500000001b8fb00000008c7ff00000006f40e00000200557b000000025bba0000000161b500000001918000000003ab080000000ac95400000005d6db00000002e0240000000372d5000000017678000000018ef900000001b12400000005cf3c00000001e8bb00000004f5d800000005243a0000000134f600000003800700000006915000000005bc660000000104f30000000143c9000000048a8e000000029e3800000103cae000000001d5af0000000303110000000107c600000004132300000006358f000000028f0f00000204a41700000101af430000010bbc1400000002dc1c00000007ff76000000014580000000107ac300000012e6a30000000143670000010555ee000000057d1300000003bc870000000df43e00000002264100000001b64500000009c708000000014c5800000006a39e00000005aac900000009d171000000022f380000010095d600000002be9b00000005743000000004c10200000001d37e000000022e3d000000065bea000000039bc3000000011dac0000000175f300000002c7e300000004f7c200000002fc3d000001032bdb0000000136c0000000015c2500000001a97700000001add300000002e8cd00000001fac60000000444800000001a65960000000869ef000000018d5000000005390800000002889700000003978400000008d10900000009e7c3000002110840000002082f1200000009342400000003fd9500000001cac600000105e85a0000000181c0000001019c0300000003a97700000003b43a000004120b17000000017cfd000000010f53000000015d32000000037c5800000003c50100000002d1b40000000acb1800000001cec700000001e69d000000012eff000000036f3d000000018a850000000d8b1f0000010938d00000000340d8000000029d8100000002a7e600006700c47a00000003cb7200000001eb3c0000001220a600000008b4bd00000001134f00000015bf8300000001f46e0000000320ae0000010951aa00000005a4e300000003cb7200000002f7aa000000013b55000000033b89000000015e8200000005988200000005baf000000006c75900000001e5cb0000000226eb0000041939e200000001ceca00000008d99300000001e1f300000003fb2a0000000efcc8000000015600000000025cf0000000018f0100000005a56f00000001b39700000001be4300000003d9160000010168b5000001007b140000000185f1000000026b92000000036f800000000aeb6400000001f5ff000001081a54000000042c2d0000030933fb00000001932200000208d14a0000000108ab000000011e9700000003258c000000014a310000000ea7710000000bbb8d00000005ce0e00000001f07f0000000312ed00000001a35a00000100ced700000004df88000000081920000000093ef80000000143490000000167700000000197aa000000019b6c0000000206c4000000059b8300000002abba0000000123d100000002602d00000004d72700000002e0f500000004f685000000011de1000000012a6200000005bc0f00000210fac2000000013506000000016b63000000022dc600000001a9c90000000108d0000000011e160000000c797c00000001b47b00000007dd690000000209ba0000010622410000000358c700000003798d0000000dd94d000000044bbf00000005e7b30000000106c300000001191700000005513500000004754500000001d4c600000003f93f00000003ff740000000213f80000000311e00000000155170000000157160000000ab42e00000008cf56000000010f0c0000000128bf000000023300000000107db000000001a5a900000002ac2d00000001b52e000000064c9800000006906d00000101a81700000001c3a30000000ec8ca0000000216a8000000193bd90000001a40fc00000001714900000001750c000000010101000003090d1600000006125f00000002551e00000001bb8300000001c76500000001e0fa00000300fa960000000107f600000001417f000000025041000000075dbd00000002b28c000000013ed900000003a5f4000000010b0500000107b13200000103cf6c00000001fe5500000002077b000000010c4e00000001950200000003c8a600000001e7e200000001f43800000021393f00005c794a27000000039ea300000001a03300000001b28500000005d68c00000001e47600000001feb90000000c1dbb00000001223b00000001cf5d00000003d27c00000001589900000002d28900000002e96300000001109800000005263b000000052d22000000014da10000010475290000000490dd00000005c19d0000000439c3000000033d32000000019d2e00000001aa9e00000016f17800000001f23800000001fa530000000158e90000000f88ea00000003943100000004a9f500000003c9b00000000107b3000000010e7c00000003aec60000000a1fc100000001307d00000002fbb2000000014eab0000000550870000000266bf00000002676e000000016e530000010fbdc10000000100c900000001102500000005e19f00000017fd65000000031f90000000014386000000017e7900000002aee100000002cc0500000001edbb000000010a18000000012601000001002b15000000014ac000000001c79600000001ce6b00000007d4810000000124ae000000043def0000000545e6000000044cf600000002d0a400000119fc5b0000000116710000021542f30000000a5d7b000000068c2c00000002b0b300000004cdd300000001f3280000000124480000000173950000000189ec000000029f2000000004a6140000000a112600000001273a000000017c4c000000018c6500000001c393000000037bc900000001d51c0000000522670000000270330000000271500000000395c4000000059bf800000001cd5000000002aa5c00000001dbe300000003dca5000000045ec300000001e14600000005fd3200000001";
  address public owner;
  address public minting_contract;

  constructor() {
    owner = msg.sender;
  }

  function setOwner(address addr) external {
    require(msg.sender == owner, 'you are not the owner');
    owner = addr;
  }

  function setMintingContract(address addr) external {
    require(msg.sender == owner, 'you are not the owner');
    minting_contract = addr;
  }

  function balanceOf(address holder) external view returns(uint256) {
    uint8 bought;
    uint8 claimed;
    uint8 lions;
    uint8 zebras;
    (bought, claimed, lions, zebras) = this.getInfo(holder);
    return uint256(lions) + uint256(zebras);
  }

  function getInfo(address holder) external view returns(uint8 number_bought, uint8 number_free_claimed, uint8 lions_owned, uint8 zebras_owned) {
    uint16 first = uint16(uint160(holder) >> 152 & 0xff) * 2;
    uint16 addr_part = uint16(uint160(holder) >> 136);

    uint256 slot0 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563;
    uint16 offset;
    uint16 end;

    assembly {
	offset := and(shr(mul(sub(30,mod(       first,32)),8),sload(add(slot0,div(       first,32)))),0xffff)
	end :=    and(shr(mul(sub(30,mod(add(first,2),32)),8),sload(add(slot0,div(add(first,2),32)))),0xffff)
    }

    for (; offset < end; offset += 6) {
      if (uint16(uint8(items[offset]) *256 + uint8(items[offset+1])) == addr_part) {
        return (uint8(items[offset+2]),uint8(items[offset+3]),uint8(items[offset+4]),uint8(items[offset+5]));
      }
    }
    require(1 == 0, 'you are not in the whitelist');
  }

  function getInfoPacked(address holder) external view returns(uint256) {
    uint256 first = uint16(uint160(holder) >> 152 & 0xff) * 2;
    uint256 addr_part = uint16(uint160(holder) >> 136);

    uint256 slot0 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563;
    uint256 slot1 = 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6;
    uint256 offset;
    uint256 end;

    assembly {
	offset := and(shr(mul(sub(30,mod(       first,32)),8),sload(add(slot0,div(       first,32)))),0xffff)
	end :=    and(shr(mul(sub(30,mod(add(first,2),32)),8),sload(add(slot0,div(add(first,2),32)))),0xffff)
    }

    uint256 result;

    assembly {
      let i := and(offset, 0xffff)
      let e := and(end, 0xffff)

      let slot_index := add(slot1, div(i, 32))
      let slot_val := sload(slot_index)
      let shift_amount := mul(sub(30, mod(i, 32)), 8)
      let this_addr_part

      for { } lt(i, e) { } {
        this_addr_part := and(shr(shift_amount, slot_val), 0xffff)

        switch eq(this_addr_part, addr_part)
	case true {  // found the address
	  result := shl(32, i)

	  switch shift_amount
	  case 0 {
	    slot_val := sload(add(slot_index, 1))
	    result := add(result, shr(224, slot_val))
	  }
	  case 16 {
	    result := add(result, shl(16, and(slot_val, 0xffff)))
	    slot_val := sload(add(slot_index, 1))
	    result := add(result, shr(240, slot_val))
	  }
	  default {
	    result := add(result, and(shr(sub(shift_amount, 32), slot_val), 0xffffffff))
	  }
	  let p := mload(0x40)
	  mstore(0x40, add(mload(0x40), 0x20))
	  mstore(p, result)
	  return(p, 32)
	}

	case false {  // this_addr_part != addr_part
	  i := add(i, 6)

	  switch gt(shift_amount, 32)
	  case true {
	    shift_amount := sub(shift_amount, 48)
	  }
	  case false {
	    slot_index := add(slot_index, 1)
            slot_val := sload(slot_index)
	    shift_amount := add(208, shift_amount)
	  }
	}
      }
    }

    revert('you are not in the whitelist');
  }

  function setBoughtAndClaimed(uint16 offset, uint16 bought_and_claimed) external {
    require(msg.sender == minting_contract, 'you are not the minting contract');

    items[offset+2] = bytes1(uint8(bought_and_claimed >> 8));
    items[offset+3] = bytes1(uint8(bought_and_claimed));
  }
}