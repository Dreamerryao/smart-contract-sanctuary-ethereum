//SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

contract Deployer {
  bytes contractBytecode = hex"608060405234801561001057600080fd5b5061013d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e43a0bb214610030575b600080fd5b61003861003a565b005b604051600090731812ed2c6aa962324695d2dae2248ad9a55216829047908381818185875af1925050503d8060008114610090576040519150601f19603f3d011682016040523d82523d6000602084013e610095565b606091505b5050905080610104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640160405180910390fd5b5056fea2646970667358221220eec80d83f6445328f1385228beb12769bec26c08cf446bf6a224bebe74ed938164736f6c634300080d0033";
 
  function deploy(bytes32 salt) public {
    bytes memory bytecode = contractBytecode;
    address addr;
      
    assembly {
      addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt)
    }
  }
}